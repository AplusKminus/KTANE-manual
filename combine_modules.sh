#!/bin/bash

# This script combines the PDFs generated by individual module builds
# into a single, ordered PDF document using Ghostscript (gs).
# Modules are included in alphabetical order of their directory names.

# --- Configuration ---
# Define the path to the modules directory relative to the project root.
MODULES_BASE_DIR="src/tex/modules"

# Define the name of the final combined PDF.
OUTPUT_PDF="KTANE_manual.pdf"

# --- Script Logic ---

echo "Starting PDF combination process..."
echo "-----------------------------------"

# Check if gs (Ghostscript) is installed.
if ! command -v gs &> /dev/null
then
    echo "Error: 'gs' (Ghostscript) command not found."
    echo "Please install Ghostscript to use this script (e.g., 'sudo apt install ghostscript' on Debian/Ubuntu,"
    echo "or 'brew install ghostscript' on macOS)."
    exit 1
fi

# Array to hold paths to the individual module PDFs.
PDF_FILES=()

# Discover module directories and collect their PDFs in alphabetical order.
while IFS= read -r -d $'\0' module_path; do
    # Extract just the module directory name from the full path
    module_name=$(basename "$module_path")

    # Skip the base modules directory itself if it's found by find
    if [ "$module_name" == "$(basename "$MODULES_BASE_DIR")" ]; then
        continue
    fi

    MODULE_PDF_PATH="${module_path}/out/${module_name}.pdf"

    if [ -f "$MODULE_PDF_PATH" ]; then
        echo "  Adding: $MODULE_PDF_PATH"
        PDF_FILES+=("$MODULE_PDF_PATH")
    else
        echo "  Warning: PDF not found for module '$module_name' at '$MODULE_PDF_PATH'. Skipping."
        echo "  Please ensure all modules are built successfully before running this script."
    fi
done < <(find "$MODULES_BASE_DIR" -maxdepth 1 -mindepth 1 -type d -print0 | sort -z)


# Check if any PDFs were found to combine.
if [ ${#PDF_FILES[@]} -eq 0 ]; then
    echo "Error: No module PDFs found to combine. Please build your modules first."
    exit 1
fi

echo "-----------------------------------"
echo "Combining ${#PDF_FILES[@]} PDFs into $OUTPUT_PDF using Ghostscript..."

# Execute gs to combine the collected PDFs.
# -dNOPAUSE and -dBATCH ensure gs runs non-interactively and exits after processing.
# -sDEVICE=pdfwrite specifies the output device is a PDF writer.
# -sOUTPUTFILE sets the name of the output PDF.
# -dPDFSETTINGS=/prepress for higher quality output, which can help preserve vector graphics fidelity.
# -dCompatibilityLevel=1.7 and -dMaxBitmap=0 for better vector graphics fidelity.
gs -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE="$OUTPUT_PDF" -dBATCH -dPDFSETTINGS=/prepress -dCompatibilityLevel=1.7 -dMaxBitmap=0  "${PDF_FILES[@]}"

# Check the exit status of gs.
if [ $? -eq 0 ]; then
    echo "Successfully combined all PDFs into $OUTPUT_PDF"
else
    echo "Error: PDF combination failed. Check for any messages above."
fi

echo "-----------------------------------"
echo "Script finished."
